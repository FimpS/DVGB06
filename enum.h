#ifndef ENUM_HEADER
#define ENUM_HEADER

typedef enum 
{
	MAP_SPRITESHEET,
	POBJECT_SPRITESHEET,
	MOBJECT_SPRITESHEET,
	RUNES_SPRITESHEET,
	PLAYER_SPRITESHEET,
} textureID;

typedef enum
{
	ST_P_NORMAL,
	ST_P_INVULN,
	ST_P_DASH,
	ST_P_ATTACK,
	ST_P_ATTACKING,
	ST_P_DEAD,
	ST_P_GONE,
	ST_P_KNOCKBACK
} player_global_state;

typedef enum
{
	PA_ROCK_DEBRIS,
	PA_MAGIC_DEBRIS,
} particle_type;

typedef enum
{
	MO_RUNNER,
	MO_CRAWLER,	
	MO_RUSHER,
	MO_BALISTA,
	MO_SUMMONER,
	MO_RUNE_SHARD,
	MO_ARCHER,
	MO_SWORDSMAN,
	MO_MAGUS,
	MO_CULTIST_CHIEFTAIN,
	MO_GOLEM,
	MO_RIDER_FIGHTER,
	MO_INTERACTABLE	
} mObject_type;

typedef enum
{
	STATUS_FROSTBITE,
	STATUS_ROT,
	STATUS_STASIS,
	status_none
} mObject_status_effect;

typedef enum
{
	RN_HOLY,
	RN_UNHOLY,
	RN_BLOOD,
	RN_FROST,
	RN_ROT,
	RN_GRAVITY,
} core_type;

typedef enum
{
	anchor,
	support,
	mending,
	complete,
} core_stage;

typedef enum
{
	PO_BALISTA_BOLT,
	PO_WRAITH,
	PO_BIG_WRAITH,
	PO_BLOOD_TAX,
	PO_SWORD_SHOCKWAVE,
	PO_SWORDSMAN_SWORD,
	PO_MAGIC_BOLT,
	PO_GOLEM_ROCK,
	PO_GOLEM_MELEE_WEAPON,
	PO_PLAYER_SPEAR,
	PO_GRAVITY_WELL,
	PO_GRAVITY_BOLT,
	PO_FROST_STORM,
	placeholder
} pObject_type;

typedef enum
{
	ST_MAP_RUN_TICK,
	ST_MAP_CINEMATIC,
	ST_MAP_CLEAR,
	ST_MAP_DEFAULT,
} map_state;

typedef enum
{
	st_spawn,
	st_m1,
	ST_CRAWLER_DASH,
	ST_CRAWLER_IDLE,
	ST_BALISTA_IDLE,
	ST_BALISTA_AWARE,
	ST_ARCHER_IDLE,
	ST_ARCHER_AWARE,
	ST_ARCHER_DASH,
	ST_ARCHER_DRAW,
	ST_SWORDSMAN_IDLE,
	ST_SWORDSMAN_AWARE,
	ST_SWORDSMAN_DASH,
	ST_SWORDSMAN_READY,
	ST_SWORDSMAN_SLASH,
	ST_MAGUS_DASH,
	ST_MAGUS_AWARE,
	ST_MAGUS_IDLE,
	ST_MAGUS_READY,
	ST_MAGUS_KNOCKBACKED,
	ST_SUMMONER_IDLE,
	ST_SUMMONER_DASH,
	ST_SUMMONER_SUMMON,
	ST_RIDER_IDLE,
	ST_RIDER_AWARE,
	ST_RIDER_CHARGE,
	ST_DRIDER_IDLE,
	ST_DRIDER_AWARE,
	ST_DRIDER_DASH,
	ST_DRIDER_READY,
	ST_DRIDER_SLASH,
	ST_GOLEM_AWARE,
	ST_GOLEM_DASH,
	ST_GOLEM_READY,
	ST_GOLEM_HIT,
	ST_GOLEM_STOMP,
	ST_GOLEM_BUILD,
	ST_CHIEFTAIN_IDLE,
	ST_CHIEFTAIN_DASH,
	ST_CHIEFTAIN_AWARE,
	ST_CHIEFTAIN_READY,
	ST_CHIEFTAIN_SUMMON,
	ST_ENEMYKNOCKBACK,
	ST_ENEMYDEAD,
	ST_DEATHRATTLE,
	ST_CLEAR,
	st_placeholder
} mObject_global_state;

typedef enum
{
	ST_PO_REAL,
	ST_PO_DEATHRATTLE,
	ST_PO_DEAD
} pObject_global_state;

typedef enum
{
	TYPE_EVENT_GOLEM,
	TYPE_EVENT_CHIEFTAIN,
	type_event_teleport,
	type_event_inmaptp,
	type_event_lock,
	type_event_rune_acquired,
	type_event_placeholder
} event_type;

typedef enum
{
	WEST,
	EAST,
	NORTH,
	SOUTH,
	NORTHEAST,
	SOUTHEAST,
	NORTHWEST,
	SOUTHWEST
} card_dir;

#endif
